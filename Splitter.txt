const customComponents = {
  // ... (rest of the main customComponents object)

  // Styles the table data cells
  td: ({ node, ...props }) => {
-    return (
-      <td className="p-2 border border-gray-300 dark:border-gray-600 align-top">
-        {props.children}
-      </td>
-    )
+    // Extract the markdown content by joining all the node's children
+    const rawMarkdown = node.children.reduce((acc, child) => {
+      // The "text" node type contains the raw string
+      if (child.type === 'text') {
+        return acc + child.value;
+      }
+      // Handle elements like paragraphs or lists
+      if (child.children) {
+        // Recursively extract text from complex children
+        const childText = child.children.map(c => c.value || '').join('');
+        return acc + childText;
+      }
+      return acc;
+    }, '');

+    return (
+      <td className="p-2 border border-gray-300 dark:border-gray-600 align-top text-sm">
+        <ReactMarkdown components={tdCustomComponents} remarkPlugins={[remarkGfm]}>
+          {rawMarkdown}
+        </ReactMarkdown>
+      </td>
+    );
  },

  // ... (rest of the main customComponents object)
};
