# Place these at the top with other imports
import asyncio
from datetime import datetime, timedelta

# Create a simple in-memory dictionary to store active users and their last activity time.
# Keys will be the user ID, values will be the timestamp.
active_users = {}
# Active users are considered active if they've checked in within the last 30 seconds
ACTIVE_TIMEOUT_SECONDS = 30

@app.post("/user_checkin/{user_id}")
async def user_checkin(user_id: str):
    """
    Endpoint for a user to signal they are active.
    """
    active_users[user_id] = datetime.now()
    return {"message": "Checked in successfully"}

@app.get("/active_users")
async def get_active_users():
    """
    Endpoint to get the count of currently active users.
    """
    # Clean up old users. A user is considered inactive if their last check-in was > ACTIVE_TIMEOUT_SECONDS ago.
    now = datetime.now()
    users_to_remove = [user_id for user_id, last_seen in active_users.items() if (now - last_seen).total_seconds() > ACTIVE_TIMEOUT_SECONDS]
    for user_id in users_to_remove:
        if user_id in active_users: # Check again to prevent KeyError
            del active_users[user_id]
            
    return {"count": len(active_users)}
