// Simple version without throttling - replace your existing scroll useEffect with this:

const forceScrollToBottomRef = useRef(false);

const scrollToBottom = useCallback((force = false) => {
  if (!chatDisplayRef.current) return;
  
  const chatDisplay = chatDisplayRef.current;
  const isNearBottom = chatDisplay.scrollHeight - chatDisplay.scrollTop - chatDisplay.clientHeight < 100;
  
  if (force || isNearBottom) {
    // Use direct scrollTop assignment for smooth, immediate scrolling
    requestAnimationFrame(() => {
      if (chatDisplayRef.current) {
        chatDisplayRef.current.scrollTop = chatDisplayRef.current.scrollHeight;
      }
    });
  }
}, []);

useEffect(() => {
  if (forceScrollToBottomRef.current) {
    scrollToBottom(true);
    forceScrollToBottomRef.current = false;
  } else {
    scrollToBottom();
  }
}, [messages, scrollToBottom]);

// Function to trigger immediate scrolling
const scrollToBottomImmediately = () => {
  forceScrollToBottomRef.current = true;
};

// Add scrollToBottomImmediately() calls to these locations in your existing code:

// 1. In handleSendMessage after adding user message:
// const updatedMessages = [...messages, userMessage];
// setMessages(updatedMessages);
// scrollToBottomImmediately(); // Add this line

// 2. In loadConversation after setting messages:
// setMessages(loadedMessages);
// scrollToBottomImmediately(); // Add this line

// 3. In handleNewChat after clearing messages:
// setMessages([]);
// scrollToBottomImmediately(); // Add this line
