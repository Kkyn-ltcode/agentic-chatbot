# After loss calculation
if torch.isnan(loss) or torch.isinf(loss):
    print(f"NaN/Inf detected at epoch {epoch}")
    print(f"Model weights: {[p.abs().max() for p in model.parameters()]}")
    print(f"Gradients: {[p.grad.abs().max() for p in model.parameters() if p.grad is not None]}")
    break
