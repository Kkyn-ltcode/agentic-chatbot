# num_neighbors: for each relation, provide list of neighbor counts per hop (e.g., [20,10] for 2 hops)
# For HeteroData, we pass dict {(src,rel,dst): [k1,k2]}
num_neighbors = {
    ('flow','same_source','flow'): [20, 10],
    ('flow','same_dest','flow'):   [20, 10],
    ('flow','bidirectional','flow'): [10, 5],
}

train_loader = NeighborLoader(
    data,
    num_neighbors=num_neighbors,
    input_nodes=('flow', torch.tensor(train_idx, dtype=torch.long)),
    batch_size=2048,
    shuffle=True,
)

val_loader = NeighborLoader(
    data,
    num_neighbors=num_neighbors,
    input_nodes=('flow', torch.tensor(val_idx, dtype=torch.long)),
    batch_size=2048,
    shuffle=False,
)
